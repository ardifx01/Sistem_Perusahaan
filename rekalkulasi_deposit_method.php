    /**\n     * Rekalkulasi total deposit berdasarkan deposit_history dengan keterangan\n     * Menangani deposit dengan keterangan 'penambahan' dan 'pengurangan'\n     * \n     * @param User $customer\n     * @return float Total deposit yang sudah diperbaiki\n     */\n    public function rekalkulasiTotalDeposit($customer)\n    {\n        try {\n            DB::beginTransaction();\n\n            // Log awal proses rekalkulasi\n            \\Log::info('Memulai rekalkulasiTotalDeposit', [\n                'user_id' => $customer->id,\n                'name' => $customer->name,\n                'current_total_deposit' => $customer->total_deposit\n            ]);\n\n            // Ambil semua deposit history\n            $depositHistory = $this->ensureArray($customer->deposit_history);\n\n            $totalDeposit = 0;\n            $totalPenambahan = 0;\n            $totalPengurangan = 0;\n            \n            // Logging untuk debugging\n            \\Log::info('Jumlah deposit history untuk rekalkulasi', [\n                'user_id' => $customer->id,\n                'total_entries' => count($depositHistory)\n            ]);\n\n            foreach ($depositHistory as $index => $deposit) {\n                $amount = floatval($deposit['amount'] ?? 0);\n                $keterangan = $deposit['keterangan'] ?? 'penambahan';\n                $tanggal = $deposit['date'] ?? 'N/A';\n\n                // PERBAIKAN: Handle deposit berdasarkan keterangan\n                if ($keterangan === 'pengurangan') {\n                    // Jika keterangan pengurangan, kurangi dari total\n                    $totalDeposit -= abs($amount);\n                    $totalPengurangan += abs($amount);\n                    \n                    \\Log::debug('Mengurangi deposit', [\n                        'index' => $index,\n                        'amount' => $amount,\n                        'abs_amount' => abs($amount),\n                        'tanggal' => $tanggal,\n                        'running_total' => $totalDeposit\n                    ]);\n                } else {\n                    // Jika keterangan penambahan (atau tidak ada keterangan), tambahkan\n                    $totalDeposit += $amount;\n                    $totalPenambahan += $amount;\n                    \n                    \\Log::debug('Menambahkan deposit', [\n                        'index' => $index,\n                        'amount' => $amount,\n                        'tanggal' => $tanggal,\n                        'running_total' => $totalDeposit\n                    ]);\n                }\n            }\n\n            // Update total deposit - pastikan numerik\n            $customer->total_deposit = floatval($totalDeposit);\n            $result = $customer->save();\n\n            \\Log::info('Hasil rekalkulasi total deposit', [\n                'user_id' => $customer->id,\n                'total_penambahan' => $totalPenambahan,\n                'total_pengurangan' => $totalPengurangan,\n                'total_deposit_final' => $totalDeposit,\n                'save_result' => $result\n            ]);\n\n            DB::commit();\n\n            return $totalDeposit;\n        } catch (\\Exception $e) {\n            DB::rollBack();\n            \\Log::error('Error in rekalkulasiTotalDeposit: ' . $e->getMessage(), [\n                'user_id' => $customer->id,\n                'error' => $e->getMessage(),\n                'file' => $e->getFile(),\n                'line' => $e->getLine(),\n                'trace' => $e->getTraceAsString()\n            ]);\n            return 0;\n        }\n    }\n